{
  "name": "Spectrum",
  "tagline": "Project management, collaboration, and communication for Computer Science",
  "body": "<div id=\"table-of-contents\">\r\n<h2>Table of Contents</h2>\r\n<div id=\"text-table-of-contents\">\r\n<ul>\r\n<li><a href=\"#sec-1\">1. Spectrum</a></li>\r\n<li><a href=\"#sec-2\">2. Product Description</a>\r\n<ul>\r\n<li><a href=\"#sec-2-1\">2.1. Create a Profile</a></li>\r\n<li><a href=\"#sec-2-2\">2.2. Manage Your Projects</a></li>\r\n<li><a href=\"#sec-2-3\">2.3. Build the Future</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-3\">3. How it's Built</a>\r\n<ul>\r\n<li><a href=\"#sec-3-1\">3.1. Essential Technologies</a>\r\n<ul>\r\n<li><a href=\"#sec-3-1-1\">3.1.1. GitHub</a></li>\r\n<li><a href=\"#sec-3-1-2\">3.1.2. HTML/CSS</a></li>\r\n<li><a href=\"#sec-3-1-3\">3.1.3. Javascript</a></li>\r\n<li><a href=\"#sec-3-1-4\">3.1.4. WebDev</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-3-2\">3.2. Framework</a>\r\n<ul>\r\n<li><a href=\"#sec-3-2-1\">3.2.1. Create-React-App :: Boilerplate</a></li>\r\n<li><a href=\"#sec-3-2-2\">3.2.2. React.js :: Front-end framework</a></li>\r\n<li><a href=\"#sec-3-2-3\">3.2.3. Firebase :: Back-end framework</a></li>\r\n<li><a href=\"#sec-3-2-4\">3.2.4. Jasmine :: Testing framework</a></li>\r\n<li><a href=\"#sec-3-2-5\">3.2.5. React-Redux :: Handles state and actions within the application</a></li>\r\n<li><a href=\"#sec-3-2-6\">3.2.6. React-Router :: Handles URL and paths within the application</a></li>\r\n<li><a href=\"#sec-3-2-7\">3.2.7. React-Router-Redux :: Keeps router in sync with application state</a></li>\r\n<li><a href=\"#sec-3-2-8\">3.2.8. Redux-Thunk :: Middleware that handles asynchronous actions</a></li>\r\n<li><a href=\"#sec-3-2-9\">3.2.9. Reselect :: Selector library for React-Redux state</a></li>\r\n<li><a href=\"#sec-3-2-10\">3.2.10. Immutable :: Manages React-Redux state</a></li>\r\n<li><a href=\"#sec-3-2-11\">3.2.11. React-Bootstrap :: UI Library</a></li>\r\n<li><a href=\"#sec-3-2-12\">3.2.12. ES2015, Babel :: Extended JavaScript functionality</a></li>\r\n<li><a href=\"#sec-3-2-13\">3.2.13. ESLint, ESLint-Config-Airbnb :: Code standards</a></li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-4\">4. Code Overview</a>\r\n<ul>\r\n<li><a href=\"#sec-4-1\">4.1. ./</a>\r\n<ul>\r\n<li><a href=\"#sec-4-1-1\">4.1.1. .babelrc</a></li>\r\n<li><a href=\"#sec-4-1-2\">4.1.2. .eslintrc</a></li>\r\n<li><a href=\"#sec-4-1-3\">4.1.3. .firebaserc</a></li>\r\n<li><a href=\"#sec-4-1-4\">4.1.4. .gitignore</a></li>\r\n<li><a href=\"#sec-4-1-5\">4.1.5. .circle.yml</a></li>\r\n<li><a href=\"#sec-4-1-6\">4.1.6. firebase.json</a></li>\r\n<li><a href=\"#sec-4-1-7\">4.1.7. firebase.rules.json</a></li>\r\n<li><a href=\"#sec-4-1-8\">4.1.8. karma.conf.js</a></li>\r\n<li><a href=\"#sec-4-1-9\">4.1.9. karma.entry.js</a></li>\r\n<li><a href=\"#sec-4-1-10\">4.1.10. package.json</a></li>\r\n<li><a href=\"#sec-4-1-11\">4.1.11. webpack.config.js</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-4-2\">4.2. ./build</a></li>\r\n<li><a href=\"#sec-4-3\">4.3. ./src/</a>\r\n<ul>\r\n<li><a href=\"#sec-4-3-1\">4.3.1. index.html</a></li>\r\n<li><a href=\"#sec-4-3-2\">4.3.2. main.js</a></li>\r\n<li><a href=\"#sec-4-3-3\">4.3.3. vendor.js</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-4-4\">4.4. ./src/views/</a>\r\n<ul>\r\n<li><a href=\"#sec-4-4-1\">4.4.1. root.js</a></li>\r\n<li><a href=\"#sec-4-4-2\">4.4.2. routes.js</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-4-5\">4.5. ./src/views/app</a>\r\n<ul>\r\n<li><a href=\"#sec-4-5-1\">4.5.1. index.js</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-4-6\">4.6. ./src/views/pages</a></li>\r\n<li><a href=\"#sec-4-7\">4.7. ./src/views/pages/sign-in</a>\r\n<ul>\r\n<li><a href=\"#sec-4-7-1\">4.7.1. index.js</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-4-8\">4.8. ./src/views/pages/home</a>\r\n<ul>\r\n<li><a href=\"#sec-4-8-1\">4.8.1. index.js</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-4-9\">4.9. ./src/views/pages/project-feed</a>\r\n<ul>\r\n<li><a href=\"#sec-4-9-1\">4.9.1. index.js</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-4-10\">4.10. ./src/views/pages/user-feed</a>\r\n<ul>\r\n<li><a href=\"#sec-4-10-1\">4.10.1. index.js</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-4-11\">4.11. ./src/views/components</a></li>\r\n<li><a href=\"#sec-4-12\">4.12. ./src/core</a>\r\n<ul>\r\n<li><a href=\"#sec-4-12-1\">4.12.1. reducers.js</a></li>\r\n<li><a href=\"#sec-4-12-2\">4.12.2. store.js</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#sec-4-13\">4.13. ./src/core/auth</a></li>\r\n<li><a href=\"#sec-4-14\">4.14. ./src/core/firebase</a></li>\r\n<li><a href=\"#sec-4-15\">4.15. ./src/core/projects</a></li>\r\n<li><a href=\"#sec-4-16\">4.16. ./src/core/users</a></li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</div>\r\n</div>\r\n\r\n\r\n# Spectrum<a id=\"sec-1\" name=\"sec-1\"></a>\r\n\r\n[GitHub](https://github.com/farmanrl/spectrum) | [Prototype](https://spectrum-c5087.firebaseapp.com/)\r\n\r\n# Product Description<a id=\"sec-2\" name=\"sec-2\"></a>\r\n\r\nSpectrum is project management and networking software for collaboration and communication between\r\nenterprising individuals, small teams, and startups. Spectrum is also intended as a platform to\r\ntrain and recruit motivated and talented developers to build the app through open-source development.\r\n\r\n## Create a Profile<a id=\"sec-2-1\" name=\"sec-2-1\"></a>\r\n\r\nLogin with authorized providers like Google, Facebook, and Github. Create a profile that showcases\r\nyour skills and contributions. View other's profiles and see what they've been working on.\r\nPartner with other users to spread your network and foster connections.\r\n\r\n## Manage Your Projects<a id=\"sec-2-2\" name=\"sec-2-2\"></a>\r\n\r\nCreate projects and recruit team members through our management system. Get matched with designers,\r\ndevelopers, and other roles critical for your projects. Whether you're starting from scratch with an\r\nidea, working on an active prototype, or ready to form a startup, Spectrum provide all the tools you\r\nneed to manage your projects.\r\n\r\n## Build the Future<a id=\"sec-2-3\" name=\"sec-2-3\"></a>\r\n\r\nCheck out featured content and search our database for users and projects. From the student to\r\nprofessional, your experience is tailored for your needs. Become a part of a new generation of\r\ndesigners, developers, and other aspiring individuals, and maximize productivity using integration\r\nwith Github, Slack, and other project management utilities and services.\r\n\r\n# How it's Built<a id=\"sec-3\" name=\"sec-3\"></a>\r\n\r\nOur system is designed with a simple, cohesive, and modern experience in mind, for both clients and\r\ndevelopers alike. With these technologies, we are at the forefront of app development, and are best\r\nprepared to take on the challenges of project scope and scale as we continue building our project.\r\n\r\nFor this purpose, I have looked towards [Todo](https://github.com/r-park/todo-react-redux), a simple Todo app example built with React, Redux, and\r\nFirebase. The back-end system and boilerplate were simple to implement thanks to their hard work and\r\ndocumentation. A shining example of how open-source development can benefit everyone.\r\n\r\n## Essential Technologies<a id=\"sec-3-1\" name=\"sec-3-1\"></a>\r\n\r\nThis is a list of basic technologies powering our webapp.\r\n\r\n### GitHub<a id=\"sec-3-1-1\" name=\"sec-3-1-1\"></a>\r\n\r\nVersion Control and project management.\r\n\r\n-   [Github Guide](https://guides.github.com/)\r\n-   [Github Tutorial](https://try.github.io/levels/1/challenges/1)\r\n\r\n### HTML/CSS<a id=\"sec-3-1-2\" name=\"sec-3-1-2\"></a>\r\n\r\nHTML (HyperText Markup Language) is the standard markup language used to create websites.\r\nHTML is rendered into Document Object Model (DOM), which is read by browser to construct web page.\r\n\r\n-   [HTML Guide](http://www.htmldog.com/guides/html/beginner/gettingstarted/)\r\n\r\nCSS describes the presentation of HTML content - what does it look like?\r\n\r\n-   [CSS Guide](http://www.htmldog.com/guides/css/beginner/)\r\n\r\nPutting these two together, we can start building for the web.\r\n\r\n-   [HTML/CSS Guide](http://learn.shayhowe.com/html-css/)\r\n-   [HTML/CSS Tutorial](https://www.codecademy.com/learn/web)\r\n\r\n### Javascript<a id=\"sec-3-1-3\" name=\"sec-3-1-3\"></a>\r\n\r\nJavascript is a programming language that can add interaction and extend the functionality of websites.\r\nJavaScript runs on the client side of the web, which can be used to control how the web pages reacts\r\non the occurrence of an event. JavaScript is an easy to learn and also powerful scripting language,\r\nwidely used for controlling web page behaviour.\r\n\r\n-   [Tutorial](https://www.codecademy.com/learn/javascript)\r\n\r\n### WebDev<a id=\"sec-3-1-4\" name=\"sec-3-1-4\"></a>\r\n\r\nPutting it all together.\r\n\r\n-   [Guide](https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web)\r\n-   [Tutorial](https://www.codecademy.com/courses/html-javascript-css/0/1)\r\n\r\n## Framework<a id=\"sec-3-2\" name=\"sec-3-2\"></a>\r\n\r\nThis is the list of packages installed through npm that we require through node<sub>modules</sub>\r\n\r\n### Create-React-App :: Boilerplate<a id=\"sec-3-2-1\" name=\"sec-3-2-1\"></a>\r\n\r\nCreate React apps with no build configuration.\r\n\r\n-   [Get Started](https://github.com/facebookincubator/create-react-app#getting-started)\r\n-   [User Guide](https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md)\r\n\r\n### React.js :: Front-end framework<a id=\"sec-3-2-2\" name=\"sec-3-2-2\"></a>\r\n\r\nA Javascript Library for building User Interfaces.\r\n\r\n-   [Get Started](https://facebook.github.io/react/docs/hello-world.html)\r\n-   [Take the Tutorial](https://facebook.github.io/react/tutorial/tutorial.html)\r\n\r\n### Firebase :: Back-end framework<a id=\"sec-3-2-3\" name=\"sec-3-2-3\"></a>\r\n\r\nFirebase Authentication provides backend services, easy-to-use SDKs, and ready-made UI libraries to\r\nauthenticate users to your app. It supports authentication using passwords, popular federated identity\r\nproviders like Google, Facebook and Twitter, and more.\r\n\r\n-   [Firebase Authentication](https://firebase.google.com/docs/auth/web/manage-users)\r\n\r\nThe Firebase Realtime Database is a cloud-hosted database. Data is stored as JSON and synchronized in\r\nrealtime to every connected client. When you build cross-platform apps with our iOS, Android, and\r\nJavaScript SDKs, all of your clients share one Realtime Database instance and automatically receive\r\nupdates with the newest data.\r\n\r\n-   [Firebase Database](https://firebase.google.com/docs/database/web/start)\r\n\r\nWith Firebase Hosting, you can quickly and easily deploy web apps and static content to a global\r\ncontent-delivery network (CDN) with a single command.\r\n\r\n-   [Firebase Hosting](https://firebase.google.com/docs/hosting/)\r\n\r\n### Jasmine :: Testing framework<a id=\"sec-3-2-4\" name=\"sec-3-2-4\"></a>\r\n\r\nJasmine is a behavior-driven development framework for testing JavaScript code. It does not depend on\r\nany other JavaScript frameworks. It does not require a DOM. And it has a clean, obvious syntax so that\r\nyou can easily write tests.\r\n\r\n-   [Get Started](https://jasmine.github.io/2.5/introduction)\r\n\r\n### React-Redux :: Handles state and actions within the application<a id=\"sec-3-2-5\" name=\"sec-3-2-5\"></a>\r\n\r\nRedux is a predictable state container for JavaScript apps.\r\n\r\nIt helps you write applications that behave consistently, run in different environments (client,\r\nserver, and native), and are easy to test. On top of that, it provides a great developer experience,\r\nsuch as live code editing combined with a time traveling debugger.\r\n\r\nThe whole state of your app is stored in an object tree inside a single store.\r\nThe only way to change the state tree is to emit an action, an object describing what happened.\r\nTo specify how the actions transform the state tree, you write pure reducers.\r\n\r\n-   [Get Started](http://redux.js.org/)\r\n\r\n### React-Router :: Handles URL and paths within the application<a id=\"sec-3-2-6\" name=\"sec-3-2-6\"></a>\r\n\r\nReact Router is a complete routing library for React.\r\nReact Router keeps your UI in sync with the URL. It has a simple API with powerful features like lazy\r\ncode loading, dynamic route matching, and location transition handling built right in. Make the URL\r\nyour first thought, not an after-thought.\r\n\r\n-   [Get Started](https://github.com/ReactTraining/react-router/tree/master/docs)\r\n-   [Tutorial](https://github.com/reactjs/react-router-tutorial)\r\n\r\n### React-Router-Redux :: Keeps router in sync with application state<a id=\"sec-3-2-7\" name=\"sec-3-2-7\"></a>\r\n\r\nYou're a smart person. You use Redux to manage your application state. You use React Router to do\r\nrouting. All is good.\r\n\r\nBut the two libraries don't coordinate. You want to do time travel with your application state, but\r\nReact Router doesn't navigate between pages when you replay actions. It controls an important part of\r\napplication state: the URL.\r\n\r\nThis library helps you keep that bit of state in sync with your Redux store. We keep a copy of the\r\ncurrent location hidden in state. When you rewind your application state with a tool like Redux\r\nDevTools, that state change is propagated to React Router so it can adjust the component tree\r\naccordingly. You can jump around in state, rewinding, replaying, and resetting as much as you'd like,\r\nand this library will ensure the two stay in sync at all times.\r\n\r\nThis library allows you to use React Router's APIs as they are documented. And, you can use redux like\r\nyou normally would, with a single app state. The library simply enhances a history instance to allow\r\nit to synchronize any changes it receives into application state.\r\n\r\n-   [Get Started](https://github.com/reactjs/react-router-redux)\r\n\r\n### Redux-Thunk :: Middleware that handles asynchronous actions<a id=\"sec-3-2-8\" name=\"sec-3-2-8\"></a>\r\n\r\nRedux Thunk middleware allows you to write action creators that return a function instead of an action.\r\nThe thunk can be used to delay the dispatch of an action, or to dispatch only if a certain condition is\r\nmet. The inner function receives the store methods dispatch and getState as parameters.\r\n\r\n-   [Get Started](https://github.com/gaearon/redux-thunk)\r\n\r\n### Reselect :: Selector library for React-Redux state<a id=\"sec-3-2-9\" name=\"sec-3-2-9\"></a>\r\n\r\nReselect is a simple library for creating memoized, composable selector functions.\r\n\r\nSelectors can compute derived data, allowing Redux to store the minimal possible state.\r\nSelectors are efficient. A selector is not recomputed unless one of its arguments change.\r\nSelectors are composable. They can be used as input to other selectors.\r\n\r\n-   [Get Started](https://github.com/reactjs/reselect)\r\n\r\n### Immutable :: Manages React-Redux state<a id=\"sec-3-2-10\" name=\"sec-3-2-10\"></a>\r\n\r\nImmutable data cannot be changed once created, leading to much simpler application development, no\r\ndefensive copying, and enabling advanced memoization and change detection techniques with simple logic.\r\nPersistent data presents a mutative API which does not update the data in-place, but instead always\r\nyields new updated data.\r\n\r\nImmutable.js provides many Persistent Immutable data structures including: List, Stack, Map,\r\nOrderedMap, Set, OrderedSet and Record.\r\n\r\n-   [Get Started](https://facebook.github.io/immutable-js/)\r\n\r\n### React-Bootstrap :: UI Library<a id=\"sec-3-2-11\" name=\"sec-3-2-11\"></a>\r\n\r\nReact-Bootstrap is a library of reusable front-end components.\r\n\r\n-   [Get Started](https://react-bootstrap.github.io/components.html)\r\n\r\n### ES2015, Babel :: Extended JavaScript functionality<a id=\"sec-3-2-12\" name=\"sec-3-2-12\"></a>\r\n\r\nES2015 is a pseudonym for the latest version of the JavaScript programming language to be approved by\r\nECMA International, the standards group responsible for vetting and approving different versions of\r\nthe language.\r\n\r\nDespite all of the hype and noise, ES2015 isn’t introducing anything other than improvements to the\r\nJavaScript language and a few new features.\r\n\r\n-   [ES2015](https://babeljs.io/docs/learn-es2015/)\r\n\r\nBabel is a next generation compiler with support for the latest version of JavaScript through syntax\r\ntransformers. These plugins allow you to use new syntax, right now without waiting for browser support.\r\n\r\n-   [Babel](https://babeljs.io/)\r\n\r\n### ESLint, ESLint-Config-Airbnb :: Code standards<a id=\"sec-3-2-13\" name=\"sec-3-2-13\"></a>\r\n\r\nESLint is an open source JavaScript linting utility.\r\nCode linting is a type of static analysis that is frequently used to find problematic patterns or code\r\nthat doesn’t adhere to certain style guidelines. There are code linters for most programming languages,\r\nand compilers sometimes incorporate linting into the compilation process.\r\n\r\nJavaScript, being a dynamic and loosely-typed language, is especially prone to developer error.\r\nWithout the benefit of a compilation process, JavaScript code is typically executed in order to find\r\nsyntax or other errors. Linting tools like ESLint allow developers to discover problems with their\r\nJavaScript code without executing it.\r\n\r\nThe primary reason ESLint was created was to allow developers to create their own linting rules.\r\nESLint is designed to have all rules completely pluggable. The default rules are written just like any\r\nplugin rules would be. They can all follow the same pattern, both for the rules themselves as well as\r\ntests. While ESLint will ship with some built-in rules to make it useful from the start, you’ll be able\r\nto dynamically load rules at any point in time.\r\n\r\n-   [ESLint](http://codewinds.com/blog/2015-04-02-emacs-flycheck-eslint-jsx.html)\r\n\r\nAirbnb Javascript Style Guide is a mostly reasonable approach to JavaScript\r\nThis package provides Airbnb's .eslintrc as an extensible shared config.\r\n\r\n-   [Airbnb Style Guide](https://github.com/airbnb/javascript)\r\n\r\n# Code Overview<a id=\"sec-4\" name=\"sec-4\"></a>\r\n\r\nAn overview of everything that's going on inside of Spectrum.\r\n\r\n## ./<a id=\"sec-4-1\" name=\"sec-4-1\"></a>\r\n\r\nContains boilerplate for our application.\r\n\r\n### .babelrc<a id=\"sec-4-1-1\" name=\"sec-4-1-1\"></a>\r\n\r\nRules for our compiler to use es2015 syntax, among other plugins\r\n\r\n### .eslintrc<a id=\"sec-4-1-2\" name=\"sec-4-1-2\"></a>\r\n\r\nRules for our linter to use the Airbnb style guide, as well as recommended React and es2015 rules,\r\namong other configurations.\r\n\r\n### .firebaserc<a id=\"sec-4-1-3\" name=\"sec-4-1-3\"></a>\r\n\r\nRules for deployment of our project on Firebase.\r\n\r\n### .gitignore<a id=\"sec-4-1-4\" name=\"sec-4-1-4\"></a>\r\n\r\nFiles, extensions, and folders to be ignored by git.\r\n\r\n### .circle.yml<a id=\"sec-4-1-5\" name=\"sec-4-1-5\"></a>\r\n\r\nCircle inspects our code before each build to infer your settings, dependencies, and test steps.\r\nWe can augment or override our inferred commands, and add deployment commands that will run after\r\na successful build.\r\n\r\n### firebase.json<a id=\"sec-4-1-6\" name=\"sec-4-1-6\"></a>\r\n\r\nConfiguration for our firebase databasing and hosting.\r\n\r\n### firebase.rules.json<a id=\"sec-4-1-7\" name=\"sec-4-1-7\"></a>\r\n\r\nRules for authorization and databasing.\r\n\r\n### karma.conf.js<a id=\"sec-4-1-8\" name=\"sec-4-1-8\"></a>\r\n\r\nSets up our testing environment for Jasmine and webpack.\r\n\r\n### karma.entry.js<a id=\"sec-4-1-9\" name=\"sec-4-1-9\"></a>\r\n\r\nDiscover and load all test files recursively.\r\n\r\n### package.json<a id=\"sec-4-1-10\" name=\"sec-4-1-10\"></a>\r\n\r\nControls our app configuration, including project information, scripts, and dependencies.\r\n\r\n### webpack.config.js<a id=\"sec-4-1-11\" name=\"sec-4-1-11\"></a>\r\n\r\nConfiguration for our build environment.\r\n\r\n## ./build<a id=\"sec-4-2\" name=\"sec-4-2\"></a>\r\n\r\nGenerated when we build our project using webpack, contains an `index.html` file with a `bundle.js`\r\ncontaining our app code, and a `vendor.bundle.js` file containing our dependencies.\r\n\r\n## ./src/<a id=\"sec-4-3\" name=\"sec-4-3\"></a>\r\n\r\nContains all the front-end and back-end framework for our application.\r\n\r\n### index.html<a id=\"sec-4-3-1\" name=\"sec-4-3-1\"></a>\r\n\r\n    <body>\r\n      <div id=\"root\"></div>\r\n    </body>\r\n\r\nThis is the `root` element `<div>` defined in our index.html that holds our application and is packaged\r\nwhen we build our application using webpack, which is then rendered to the `DOM`.\r\n\r\n### main.js<a id=\"sec-4-3-2\" name=\"sec-4-3-2\"></a>\r\n\r\n    const store = configureStore();\r\n    const syncedHistory = syncHistoryWithStore(browserHistory, store);\r\n    const rootElement = document.getElementById('root');\r\n\r\n`store` creates a redux `store` for our application configured with additional middleware and devTools,\r\nand holds our `reducers` and `initialstate`.\r\n\r\n`syncedHistory` creates enhanced browser history that syncs navigation with the store. We provide\r\nour own `reducer` function that will receive actions of type `LOCATION_CHANGE` and return the payload\r\nmerged into the locationBeforeTransitions property of the routing state.\r\n\r\n`rootElement` is the element that all components are composed to.\r\n\r\n`syncedHistory`\r\n\r\n    function render(Root) {\r\n      ReactDOM.render(\r\n        <AppContainer>\r\n          <Root history={syncedHistory} store={store} />\r\n        </AppContainer>,\r\n        rootElement\r\n      );\r\n    }\r\n\r\n`<AppContainer>` is a component provided by React Hot Loader, a plugin for Webpack that allows\r\ninstantaneous live refresh without losing state while editing React components.\r\n\r\n    initAuth(store.dispatch)\r\n      .then(() => render(Root))\r\n      .catch(error => console.error(error)); // eslint-disable-line no-console\r\n\r\nAfter initial authorization has completed, then the application is rendered.\r\n\r\n### vendor.js<a id=\"sec-4-3-3\" name=\"sec-4-3-3\"></a>\r\n\r\nFor big web apps it’s not efficient to put all code into a single file, especially if some blocks of\r\ncode are only required under some circumstances. Webpack has a feature to split your codebase into\r\n“chunks” which are loaded on demand.\r\n\r\nTo split your app into 2 files, say `app.js` and `vendor.js`, you can `require` the vendor files in\r\n`vendor.js`. Then pass this name to the `CommonsChunkPlugin` as shown below.\r\n\r\nThis will remove all modules in the vendor chunk from the app chunk. The bundle.js will now contain\r\njust your app code, without any of its dependencies. These are in vendor.bundle.js.\r\n\r\n## ./src/views/<a id=\"sec-4-4\" name=\"sec-4-4\"></a>\r\n\r\nFront-End Framework.\r\n\r\n### root.js<a id=\"sec-4-4-1\" name=\"sec-4-4-1\"></a>\r\n\r\n    <Provider store={store}>\r\n      <Router history={history} routes={getRoutes(store.getState)} />\r\n    </Provider>\r\n\r\n`<Provider store>` Makes the Redux `store` available to the `connect()` calls in the component hierarchy\r\nbelow. Normally, you can’t use `connect()` without wrapping the root component in `<Provider>`.\r\n\r\n`<Router />` is initialized with a `history`, and a `route` configuration - a set of instructions that\r\ntell a router how to try to match the URL and what code to run when it does.\r\n\r\n### routes.js<a id=\"sec-4-4-2\" name=\"sec-4-4-2\"></a>\r\n\r\n    export const paths = {\r\n      ROOT: '/',\r\n      SIGN_IN: '/sign-in',\r\n      TASKS: '/'\r\n    };\r\n\r\n    ...\r\n    export const getRoutes = getState => {\r\n      return {\r\n        path: paths.ROOT,\r\n        component: App,\r\n        childRoutes: [\r\n          {\r\n            indexRoute: {\r\n              component: Projects,\r\n              onEnter: requireAuth(getState)\r\n            }\r\n          },\r\n          {\r\n            path: paths.SIGN_IN,\r\n            component: SignIn,\r\n            onEnter: requireUnauth(getState)\r\n          }\r\n        ]\r\n      };\r\n    };\r\n\r\n`paths` is the indexing we'd like to for our URL routing.\r\n\r\nImagine we'd like to render another component inside of `App` when the URL is `/`. Currently,\r\n`this.props.children` inside of `App`'s `render` method is `undefined` in this case. We can use\r\n`childRoutes` to specify a `route` for the component to be rendered .\r\n\r\n`Routes` may also define `onEnter` and `onLeave` hooks that are invoked once a transition has been\r\nconfirmed. These hooks are useful for various things like requiring `auth` when a `route` is entered\r\nand saving stuff to persistent storage before a `route` unmounts.\r\n\r\n## ./src/views/app<a id=\"sec-4-5\" name=\"sec-4-5\"></a>\r\n\r\n### index.js<a id=\"sec-4-5-1\" name=\"sec-4-5-1\"></a>\r\n\r\n      render() {\r\n        return (\r\n          <div>\r\n            <Header\r\n              authenticated={this.props.auth.authenticated}\r\n              signOut={this.props.signOut}\r\n            />\r\n\r\n            <main className=\"main\">{this.props.children}</main>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\nContainer for the `Header` of the application, as well as any components rendered to it via the `router`.\r\n\r\n## ./src/views/pages<a id=\"sec-4-6\" name=\"sec-4-6\"></a>\r\n\r\nControls the various pages of the application.\r\n\r\n## ./src/views/pages/sign-in<a id=\"sec-4-7\" name=\"sec-4-7\"></a>\r\n\r\nIf user fails to authenticate, a `sign-in` page is displayed.\r\n\r\n### index.js<a id=\"sec-4-7-1\" name=\"sec-4-7-1\"></a>\r\n\r\nControls sign-in buttons with actions to different providers\r\n\r\n## ./src/views/pages/home<a id=\"sec-4-8\" name=\"sec-4-8\"></a>\r\n\r\nIf user selects Home in navigation, `home` will be displayed.\r\n\r\n### index.js<a id=\"sec-4-8-1\" name=\"sec-4-8-1\"></a>\r\n\r\nDisplays a list of users and projects, as well as other content relevant to the user.\r\n\r\n## ./src/views/pages/project-feed<a id=\"sec-4-9\" name=\"sec-4-9\"></a>\r\n\r\nIf user selects Project Feed in navigation, `project-feed` will be displayed.\r\n\r\n### index.js<a id=\"sec-4-9-1\" name=\"sec-4-9-1\"></a>\r\n\r\nDisplays a list of Projects based on a series of filters.\r\n\r\n## ./src/views/pages/user-feed<a id=\"sec-4-10\" name=\"sec-4-10\"></a>\r\n\r\nIf user selects User Feed in navigation, this page will be displayed.\r\n\r\n### index.js<a id=\"sec-4-10-1\" name=\"sec-4-10-1\"></a>\r\n\r\nDisplays a list of users based on a series of filters.\r\n\r\n## ./src/views/components<a id=\"sec-4-11\" name=\"sec-4-11\"></a>\r\n\r\nHolds all of our UI components.\r\n\r\n## ./src/core<a id=\"sec-4-12\" name=\"sec-4-12\"></a>\r\n\r\nBack-End Framework.\r\n\r\n### reducers.js<a id=\"sec-4-12-1\" name=\"sec-4-12-1\"></a>\r\n\r\nCombines all our individual reducers.\r\n\r\n### store.js<a id=\"sec-4-12-2\" name=\"sec-4-12-2\"></a>\r\n\r\nConfigures our Redux `store` with the `thunk` middleware for handling asyncronous `actions`.\r\nPasses through our `reducers` as well as an `initialState`.\r\n\r\n## ./src/core/auth<a id=\"sec-4-13\" name=\"sec-4-13\"></a>\r\n\r\nHolds our `actions`, `types`, `reducer`, `selectors`, and `models` for Redux to control\r\n`authorization` `state` and `actions`.\r\n\r\n## ./src/core/firebase<a id=\"sec-4-14\" name=\"sec-4-14\"></a>\r\n\r\nHolds our `actions`, `types`, `reducer`, `selectors`, and `models` for Redux to control\r\n`firebase` `state` and `actions`.\r\n\r\n## ./src/core/projects<a id=\"sec-4-15\" name=\"sec-4-15\"></a>\r\n\r\nHolds our `actions`, `types`, `reducer`, `selectors`, and `models` for Redux to control\r\n`projects` `state` and `actions`.\r\n\r\n## ./src/core/users<a id=\"sec-4-16\" name=\"sec-4-16\"></a>\r\n\r\nHolds our `actions`, `types`, `reducer`, `selectors`, and `models` for Redux to control\r\n`user` `state` and `actions`.\r\n\r\n*Much of this was lifted from existing documentation. Thanks Devs!*",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}